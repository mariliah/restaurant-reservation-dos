{"version":3,"sources":["layout/Menu.js","utils/date-time.js","utils/format-reservation-date.js","utils/api.js","layout/ErrorAlert.js","reservations/CancelReservation.js","reservations/ShowReservations.js","tables/FinishTable.js","tables/ShowTables.js","utils/useQuery.js","dashboard/Dashboard.js","layout/NotFound.js","reservations/ReservationForm.js","reservations/CreateReservation.js","tables/TableForm.js","tables/CreateTable.js","reservations/SeatReservation.js","reservations/SearchReservations.js","reservations/EditReservation.js","layout/Routes.js","layout/Layout.js","App.js","index.js"],"names":["Menu","className","to","id","type","dateFormat","asDateString","date","getFullYear","toString","getMonth","padStart","getDate","today","Date","previous","currentDate","split","year","month","day","setMonth","setDate","next","formatDate","reservation","reservation_date","match","formatReservationDate","reservations","Array","isArray","map","API_BASE_URL","process","REACT_APP_API_BASE_URL","headers","Headers","fetchJson","url","options","onCancel","a","fetch","response","status","json","payload","error","Promise","reject","message","data","name","console","stack","resolve","listReservations","params","signal","URL","Object","entries","forEach","key","value","searchParams","append","then","formatReservationTime","createReservation","method","body","JSON","stringify","createTable","table","listTables","seatTable","table_id","reservation_id","finishTable","readReservation","updateReservation","cancelReservation","ErrorAlert","CancelReservation","useState","err","setErr","cancelHandle","event","preventDefault","abortController","AbortController","window","confirm","location","reload","abort","onClick","ShowReservations","length","people","first_name","last_name","mobile_number","href","FinishTable","history","useHistory","clickHandle","push","ShowTables","tables","table_name","capacity","useQuery","URLSearchParams","useLocation","search","Dashboard","setReservations","reservationsError","setReservationsError","setCurrentDate","route","useRouteMatch","query","setTables","loadDashboard","catch","useEffect","queryDate","get","NotFound","ReservationForm","submitHandle","changeHandle","form","cancelLink","moment","format","onSubmit","htmlFor","placeholder","onChange","required","pattern","reservation_time","min","CreateReservation","formData","setFormData","Number","target","TableForm","class","CreateTable","goBack","SeatReservation","useParams","tablesError","setTablesError","tableId","reservationId","SearchReservations","results","EditReservation","setReservation","getReservation","Routes","exact","path","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27359d09.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\n/**\n * Defines the menu for this application.\n *\n * @returns {JSX.Element}\n */\n\nfunction Menu() {\n  return (\n    <nav className=\"navbar navbar-dark align-items-start p-0\">\n      <div className=\"container-fluid d-flex flex-column p-0\">\n        <Link\n          className=\"navbar-brand d-flex justify-content-center align-items-center sidebar-brand m-0\"\n          to=\"/\"\n        >\n          <div className=\"sidebar-brand-text mx-3\">\n            <span>Periodic Tables</span>\n          </div>\n        </Link>\n        <hr className=\"sidebar-divider my-0\" />\n        <ul className=\"nav navbar-nav text-light\" id=\"accordionSidebar\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <span className=\"oi oi-dashboard\" />\n              &nbsp;Dashboard\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/search\">\n              <span className=\"oi oi-magnifying-glass\" />\n              &nbsp;Search\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/reservations/new\">\n              <span className=\"oi oi-plus\" />\n              &nbsp;New Reservation\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/tables/new\">\n              <span className=\"oi oi-layers\" />\n              &nbsp;New Table\n            </Link>\n          </li>\n        </ul>\n        <div className=\"text-center d-none d-md-inline\">\n          <button\n            className=\"btn rounded-circle border-0\"\n            id=\"sidebarToggle\"\n            type=\"button\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Menu;\n","const dateFormat = /\\d\\d\\d\\d-\\d\\d-\\d\\d/;\nconst timeFormat = /\\d\\d:\\d\\d/;\n\n/**\n * Formats a Date object as YYYY-MM-DD.\n *\n * This function is *not* exported because the UI should generally avoid working directly with Date instance.\n * You may export this function if you need it.\n *\n * @param date\n *  an instance of a date object\n * @returns {string}\n *  the specified Date formatted as YYYY-MM-DD\n */\nexport function asDateString(date) {\n  return `${date.getFullYear().toString(10)}-${(date.getMonth() + 1)\n    .toString(10)\n    .padStart(2, \"0\")}-${date.getDate().toString(10).padStart(2, \"0\")}`;\n}\n\n/**\n * Format a date string in ISO-8601 format (which is what is returned from PostgreSQL) as YYYY-MM-DD.\n * @param dateString\n *  ISO-8601 date string\n * @returns {*}\n *  the specified date string formatted as YYYY-MM-DD\n */\nexport function formatAsDate(dateString) {\n  return dateString.match(dateFormat)[0];\n}\n\n/**\n * Format a time string in HH:MM:SS format (which is what is returned from PostgreSQL) as HH:MM.\n * @param timeString\n *  HH:MM:SS time string\n * @returns {*}\n *  the specified time string formatted as YHH:MM.\n */\nexport function formatAsTime(timeString) {\n  return timeString.match(timeFormat)[0];\n}\n\n/**\n * Today's date as YYYY-MM-DD.\n * @returns {*}\n *  the today's date formatted as YYYY-MM-DD\n */\nexport function today() {\n  return asDateString(new Date());\n}\n\n/**\n * Subtracts one day to the specified date and return it in as YYYY-MM-DD.\n * @param currentDate\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\n * @returns {*}\n *  the date one day prior to currentDate, formatted as YYYY-MM-DD\n */\nexport function previous(currentDate) {\n  let [ year, month, day ] = currentDate.split(\"-\");\n  month -= 1;\n  const date = new Date(year, month, day);\n  date.setMonth(date.getMonth());\n  date.setDate(date.getDate() - 1);\n  return asDateString(date);\n}\n\n/**\n * Adds one day to the specified date and return it in as YYYY-MM-DD.\n * @param currentDate\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\n * @returns {*}\n *  the date one day after currentDate, formatted as YYYY-MM-DD\n */\nexport function next(currentDate) {\n  let [ year, month, day ] = currentDate.split(\"-\");\n  month -= 1;\n  const date = new Date(year, month, day);\n  date.setMonth(date.getMonth());\n  date.setDate(date.getDate() + 1);\n  return asDateString(date);\n}\n","import { formatAsDate } from \"./date-time\";\n\nfunction formatDate(reservation) {\n  reservation.reservation_date = formatAsDate(reservation.reservation_date);\n  return reservation;\n}\n\n/**\n * Formats the reservation_date property of a reservation.\n * @param reservations\n *  a single reservation, or an array of reservations.\n * @returns {[reservation]|reservation}\n *  the specified reservation(s) with the reservation_date property formatted as YYYY-MM-DD.\n */\nexport default function formatReservationDate(reservations) {\n  return Array.isArray(reservations)\n    ? reservations.map(formatDate)\n    : formatDate(reservations);\n}\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nimport formatReservationDate from \"./format-reservation-date\";\nimport formatReservationTime from \"./format-reservation-date\";\n\nconst API_BASE_URL =\n  process.env.REACT_APP_API_BASE_URL || \"http://localhost:5001\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  value to return if fetch call is aborted. Default value is undefined.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    const payload = await response.json();\n\n    if (payload.error) {\n      return Promise.reject({ message: payload.error });\n    }\n    return payload.data;\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing reservations.\n * @returns {Promise<[reservation]>}\n *  a promise that resolves to a possibly empty array of reservation saved in the database.\n */\n\nexport async function listReservations(params, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations`);\n  Object.entries(params).forEach(([key, value]) =>\n    url.searchParams.append(key, value.toString())\n  );\n  return await fetchJson(url, { headers, signal }, [])\n    .then(formatReservationDate)\n    .then(formatReservationTime);\n}\n\n/**\n * Creates a new reservation\n * @returns {Promise<{reservation}>}\n *  a promise that resolves to a possibly empty object of reservation saved in the database.\n */\nexport async function createReservation(reservation, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations`);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ data: reservation }),\n    signal,\n  };\n  return await fetchJson(url, options, reservation);\n}\n\n/**\n * Creates a new table\n * @returns {Promise<{table}>}\n *  a promise that resolves to a possibly empty object of table saved in the database.\n */\nexport async function createTable(table, signal) {\n  const url = new URL(`${API_BASE_URL}/tables`);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ data: table }),\n    signal,\n  };\n  return await fetchJson(url, options, table);\n}\n\n/**\n * Retrieves all existing tables.\n * @returns {Promise<[tables]>}\n *  a promise that resolves to a possibly empty array of tables saved in the database.\n */\n\nexport async function listTables(signal) {\n  const url = new URL(`${API_BASE_URL}/tables`);\n  return await fetchJson(url, { headers, signal }, []);\n}\n\n/**\n * Seat a reservaion, updates the reservaion status to seated and adds the reservation id to the table\n * @returns {Promise<{table}>}\n *  a promise that resolves to a possibly empty object of table saved in the database.\n */\nexport async function seatTable(table_id, reservation_id, signal) {\n  const url = new URL(`${API_BASE_URL}/tables/${table_id}/seat`);\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: { reservation_id: reservation_id } }),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n/**\n * function for a done reservation, updates the reservaion status to finishes and delete the reservation id from the table\n * @returns {Promise<{table}>}\n *  a promise that resolves to a possibly empty object of table saved in the database.\n */\nexport async function finishTable(table_id, reservation_id, signal) {\n  const url = new URL(`${API_BASE_URL}/tables/${table_id}/seat`);\n  const options = {\n    method: \"DELETE\",\n    headers,\n    body: JSON.stringify({ data: table_id }),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n/**\n   Retrieves a single existing reservation.\n   @returns {Promise<[reservation]>}\n   a promise that resolves to the data of a single reservation from the database.\n */\n\nexport async function readReservation(reservation_id, signal) {\n  const url = `${API_BASE_URL}/reservations/${reservation_id}`;\n  return await fetchJson(url, { headers, signal }, []);\n}\n\n/**\n   Updates the requested reservation\n   @returns {Promise<[reservation]>}\n   a promise that resolves to new reservation data being saved to database.\n */\n\nexport async function updateReservation(reservation, signal) {\n  const url = `${API_BASE_URL}/reservations/${reservation.reservation_id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: reservation }),\n    signal,\n  };\n\n  return await fetchJson(url, options, {});\n}\n\n/**\n   Changes the status of a reservation to \"cancelled\".\n   @returns {Promise<[reservation]>}\n   a promise that resolves to the reservation data that was saved in the database.\n */\n\nexport async function cancelReservation(reservation_id, signal) {\n  const url = `${API_BASE_URL}/reservations/${reservation_id}/status`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: { status: \"cancelled\" } }),\n    signal,\n  };\n\n  return await fetchJson(url, options, {});\n}\n","import React from \"react\";\n\n/**\n * Defines the alert message to render if the specified error is truthy.\n * @param error\n *  an instance of an object with `.message` property as a string, typically an Error instance.\n * @returns {JSX.Element}\n *  a bootstrap danger alert that contains the message string.\n */\n\nfunction ErrorAlert({ error }) {\n  return (\n    error && (\n      <div className=\"alert alert-danger m-2\">Error: {error.message}</div>\n    )\n  );\n}\n\nexport default ErrorAlert;\n","import React, { useState } from \"react\";\nimport { cancelReservation } from \"../utils/api\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\n\nfunction CancelReservation({ reservation_id }) {\n  const [err, setErr] = useState(false);\n\n  const cancelHandle = async (event) => {\n    event.preventDefault();\n    setErr(false);\n    const abortController = new AbortController();\n    if (\n      window.confirm(\n        \"Do you want to cancel this reservation? This cannot be undone.\"\n      )\n    ) {\n      try {\n        await cancelReservation(reservation_id, abortController.signal);\n        window.location.reload(true);\n      } catch (error) {\n        if (error.name !== \"AbortError\") {\n          setErr(error);\n        }\n      }\n    }\n    return () => {\n      abortController.abort();\n    };\n  };\n\n  return (\n    <div>\n      <ErrorAlert error={err} />\n      <button\n        type=\"button\"\n        onClick={cancelHandle}\n        className=\"btn btn-danger mx-3\"\n        data-reservation-id-cancel={reservation_id}\n      >\n        Cancel\n      </button>\n    </div>\n  );\n}\n\nexport default CancelReservation;\n","import React from \"react\";\nimport CancelReservation from \"./CancelReservation\";\n\nfunction ShowReservations({ reservations }) {\n  if (reservations.length > 0) {\n    return (\n      <ol className=\"list-group list-group-numbered\">\n        {reservations.map((reservation) => {\n          const {\n            people,\n            first_name,\n            last_name,\n            reservation_id,\n            mobile_number,\n            status,\n          } = reservation;\n          return (\n            <li\n              key={reservation_id}\n              className=\"list-group-item d-flex justify-content-between align-items-start\"\n            >\n              <div className=\"ms-2 me-auto\">\n                <div className=\"fw-bold\">\n                  {first_name} {last_name}\n                </div>\n                <span>Number of people: {people}</span>\n                <br />\n                <span>Mobile Number: {mobile_number}</span>\n                <br />\n                <span>Reservaion Number: {reservation_id}</span>\n                <br />\n                <span data-reservation-id-status={reservation_id}>\n                  Reservaion status: {status}\n                </span>\n              </div>\n              {status === \"booked\" ? (\n                <a\n                  href={`/reservations/${reservation_id}/seat`}\n                  className=\"btn btn-primary mx-3\"\n                >\n                  Seat\n                </a>\n              ) : (\n                <div></div>\n              )}\n              <a\n                href={`/reservations/${reservation_id}/edit`}\n                className=\"btn btn-primary mx-3\"\n              >\n                Edit\n              </a>\n              <CancelReservation reservation_id={reservation_id} />\n            </li>\n          );\n        })}\n      </ol>\n    );\n  }\n  return <h5>No reservations for the requested date</h5>;\n}\n\nexport default ShowReservations;\n","import React, { useState } from \"react\";\nimport { finishTable } from \"../utils/api\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction FinishTable({ table }) {\n  const [err, setErr] = useState(false);\n  const history = useHistory();\n\n  const clickHandle = async (event) => {\n    event.preventDefault();\n    setErr(false);\n    const abortController = new AbortController();\n    if (\n      window.confirm(\n        \"Is this table ready to seat new guests? This cannot be undone.\"\n      )\n    ) {\n      try {\n        await finishTable(\n          table.table_id,\n          table.reservation_id,\n          abortController.signal\n        );\n        history.push(\"/\");\n      } catch (error) {\n        if (error.name !== \"AbortError\") {\n          setErr(error);\n        }\n      }\n      return () => {\n        abortController.abort();\n      };\n    }\n  };\n\n  return (\n    <div>\n      <h6 data-table-id-status={table.table_id}>Occupied</h6>\n      <ErrorAlert error={err} />\n      <button\n        type=\"button\"\n        data-table-id-finish={table.table_id}\n        className=\"btn btn-primary\"\n        onClick={clickHandle}\n      >\n        Finish\n      </button>\n    </div>\n  );\n}\n\nexport default FinishTable;\n","import React from \"react\";\nimport FinishTable from \"./FinishTable\";\n\nfunction ShowTables({ tables }) {\n  if (tables.length > 0) {\n    return (\n      <div className=\"row\">\n        {tables.map((table) => {\n          return (\n            <div key={table.table_id} className=\"col-sm-6\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{table.table_name}</h5>\n                  <p className=\"card-text\">\n                    Table Size: {table.capacity}\n                    <br />\n                    {table.reservation_id ? (\n                      <FinishTable table={table} />\n                    ) : (\n                      <h6 data-table-id-status={table.table_id}>Free</h6>\n                    )}\n                  </p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n  return null;\n}\n\nexport default ShowTables;\n","/**\n * useQuery is a custom hook that makes use of the useLocation and the URL class to parse the query parameters.\n *\n * @example\n *\n *     const query = useQuery();\n *     const date = query.get(\"date\")\n */\n\n import { useLocation } from \"react-router-dom\";\n\n function useQuery() {\n   return new URLSearchParams(useLocation().search);\n }\n \n export default useQuery;","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { listReservations, listTables } from \"../utils/api\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport { previous, next, today } from \"../utils/date-time\";\nimport ShowReservations from \"../reservations/ShowReservations\";\nimport ShowTables from \"../tables/ShowTables\";\nimport useQuery from \"../utils/useQuery\";\n\n/**\n * Defines the dashboard page.\n * @param date\n *  the date for which the user wants to view reservations.\n * @returns {JSX.Element}\n */\nfunction Dashboard({ date }) {\n  const [reservations, setReservations] = useState([]);\n  const [reservationsError, setReservationsError] = useState(null);\n  const history = useHistory();\n  const [currentDate, setCurrentDate] = useState(date);\n  const route = useRouteMatch();\n  const query = useQuery();\n  const [tables, setTables] = useState([]);\n\n  useEffect(loadDashboard, [currentDate]);\n\n  function loadDashboard() {\n    const abortController = new AbortController();\n    setReservationsError(null);\n    listReservations({ date: currentDate }, abortController.signal)\n      .then(setReservations)\n      .catch(setReservationsError);\n    return () => abortController.abort();\n  }\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    setReservationsError(null);\n    listTables(abortController.signal)\n      .then(setTables)\n      .catch(setReservationsError);\n    return () => abortController.abort();\n  }, []);\n\n  useEffect(() => {\n    function getDate() {\n      const queryDate = query.get(\"date\");\n      if (queryDate) {\n        setCurrentDate(queryDate);\n      } else {\n        setCurrentDate(today());\n      }\n    }\n    getDate();\n  }, [query, route]);\n\n  useEffect(loadDashboard, [currentDate]);\n\n  return (\n    <main>\n      <h1>Dashboard</h1>\n      <div className=\"d-md-flex mb-3\">\n        <h4 className=\"mb-0\">Reservations for date</h4>\n      </div>\n      <ErrorAlert error={reservationsError} />\n      <div className=\"d-grid gap-2 d-md-flex justify-content-center\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary mx-2 my-2\"\n          onClick={() => {\n            history.push(`/dashboard?date=${previous(date)}`);\n            setCurrentDate(previous(date));\n          }}\n        >\n          Previous\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary mx-2 my-2\"\n          onClick={() => {\n            history.push(`/dashboard?date=${today()}`);\n            setCurrentDate(today());\n          }}\n        >\n          Today\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary mx-2 my-2\"\n          onClick={() => {\n            history.push(`/dashboard?date=${next(date)}`);\n            setCurrentDate(next(date));\n          }}\n        >\n          Next\n        </button>\n      </div>\n      <br />\n      <ShowReservations reservations={reservations} />\n      <hr />\n      <div className=\"d-md-flex mb-3\">\n        <h4 className=\"mb-0\">Tables</h4>\n      </div>\n      <ShowTables tables={tables} />\n    </main>\n  );\n}\n\nexport default Dashboard;\n","import React from \"react\";\n\n/**\n * Defines the \"Not Found\" page that is displayed for any unmatched route.\n *\n * You will not need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport moment from \"moment\";\n\nfunction ReservationForm({ submitHandle, changeHandle, form, cancelLink }) {\n  const date = moment(form.reservation_date).format(\"yyyy-MM-DD\");\n\n  return (\n    <form onSubmit={submitHandle}>\n      <div>\n        <label htmlFor=\"first_name\" className=\"form-label\">\n          First Name\n        </label>\n        <br />\n        <input\n          id=\"first_name\"\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"First Name\"\n          name=\"first_name\"\n          onChange={changeHandle}\n          value={form.first_name}\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"last_name\" className=\"form-label\">\n          Last Name\n        </label>\n        <br />\n        <input\n          id=\"last_name\"\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Last Name\"\n          name=\"last_name\"\n          onChange={changeHandle}\n          value={form.last_name}\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"mobile_number\" className=\"form-label\">\n          Mobile Number\n        </label>\n        <br />\n        <input\n          id=\"mobile_number\"\n          className=\"form-control\"\n          type=\"tel\"\n          placeholder=\"(---) --- ----\"\n          name=\"mobile_number\"\n          onChange={changeHandle}\n          value={form.mobile_number}\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"reservation_date\" className=\"form-label\">\n          Reservation Date\n        </label>\n        <br />\n        <input\n          id=\"reservation_date\"\n          className=\"form-control\"\n          type=\"date\"\n          pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n          placeholder=\"YYYY-MM-DD\"\n          name=\"reservation_date\"\n          onChange={changeHandle}\n          value={date}\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"reservation_time\" className=\"form-label\">\n          Reservation Time\n        </label>\n        <br />\n        <input\n          id=\"reservation_time\"\n          className=\"form-control\"\n          type=\"time\"\n          pattern=\"[0-9]{2}:[0-9]{2}\"\n          placeholder=\"HH:MM\"\n          name=\"reservation_time\"\n          onChange={changeHandle}\n          value={form.reservation_time}\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"people\" className=\"form-label\">\n          Number of people\n        </label>\n        <br />\n        <input\n          id=\"people\"\n          className=\"form-control\"\n          type=\"number\"\n          min={1}\n          placeholder={1}\n          name=\"people\"\n          onChange={changeHandle}\n          value={form.people}\n          required\n        />\n      </div>\n      <button type=\"button\" onClick={cancelLink} className=\"btn btn-secondary\">\n        Cancel\n      </button>\n      <button type=\"submit\" className=\"btn btn-primary m-3\">\n        Submit\n      </button>\n    </form>\n  );\n}\n\nexport default ReservationForm;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ReservationForm from \"./ReservationForm\";\nimport { createReservation } from \"../utils/api\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\n\nfunction CreateReservation() {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    mobile_number: \"\",\n    reservation_date: \"\",\n    reservation_time: \"\",\n    people: \"\",\n  });\n  const [err, setErr] = useState(false);\n\n  const changeHandle = ({ target }) => {\n    setFormData({ ...formData, [target.name]: target.value });\n  };\n\n  const submitHandle = async (event) => {\n    event.preventDefault();\n    setErr(false);\n    const abortController = new AbortController();\n    formData.people = Number(formData.people);\n    try {\n      const response = await createReservation(\n        formData,\n        abortController.signal\n      );\n      history.push(`/dashboard?date=${response.reservation_date}`);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        setErr(error);\n      }\n    }\n    return () => {\n      abortController.abort();\n    };\n  };\n\n  const cancelLink = () => history.push(`/dashboard`);\n\n  return (\n    <div>\n      <h1>New Reservation</h1>\n      <ErrorAlert error={err} />\n      <ReservationForm\n        submitHandle={submitHandle}\n        changeHandle={changeHandle}\n        form={formData}\n        cancelLink={cancelLink}\n      />\n    </div>\n  );\n}\n\nexport default CreateReservation;\n","import React from \"react\";\n\nfunction TableForm({ submitHandle, changeHandle, form, cancelLink }) {\n  return (\n    <form onSubmit={submitHandle}>\n      <div>\n        <label htmlFor=\"table_name\" class=\"form-label\">\n          Table Name\n        </label>\n        <br />\n        <input\n          id=\"table_name\"\n          class=\"form-control\"\n          type=\"text\"\n          placeholder=\"Table Name\"\n          name=\"table_name\"\n          onChange={changeHandle}\n          value={form.table_name}\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"capacity\" class=\"form-label\">\n          Table Capacity\n        </label>\n        <br />\n        <input\n          id=\"capacity\"\n          class=\"form-control\"\n          type=\"number\"\n          min={1}\n          placeholder={1}\n          name=\"capacity\"\n          onChange={changeHandle}\n          value={form.capacity}\n          required\n        />\n      </div>\n      <button onClick={cancelLink} className=\"btn btn-secondary\">\n        Cancel\n      </button>\n      <button type=\"submit\" className=\"btn btn-primary m-3\">\n        Submit\n      </button>\n    </form>\n  );\n}\n\nexport default TableForm;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport TableForm from \"./TableForm\";\nimport { createTable } from \"../utils/api\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\n\nfunction CreateTable() {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    table_name: \"\",\n    capacity: \"\",\n  });\n  const [err, setErr] = useState(false);\n\n  const changeHandle = ({ target }) => {\n    setFormData({ ...formData, [target.name]: target.value });\n  };\n\n  const submitHandle = async (event) => {\n    event.preventDefault();\n    setErr(false);\n    const abortController = new AbortController();\n    formData.capacity = Number(formData.capacity);\n    try {\n      await createTable(formData, abortController.signal);\n      history.push(`/dashboard`);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        setErr(error);\n      }\n    }\n    return () => {\n      abortController.abort();\n    };\n  };\n\n  const cancelLink = () => history.goBack();\n\n  return (\n    <div>\n      <h1>New Table</h1>\n      <ErrorAlert error={err} />\n      <TableForm\n        submitHandle={submitHandle}\n        changeHandle={changeHandle}\n        form={formData}\n        cancelLink={cancelLink}\n      />\n    </div>\n  );\n}\n\nexport default CreateTable;\n","import React, { useState, useEffect } from \"react\";\nimport { listTables, seatTable } from \"../utils/api\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\n\nfunction SeatReservation() {\n  const { reservation_id } = useParams();\n  const [tables, setTables] = useState([]);\n  const [tablesError, setTablesError] = useState(false);\n  const [formData, setFormData] = useState({ table_id: \"\" });\n  const history = useHistory();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    setTablesError(null);\n    listTables(abortController.signal).then(setTables).catch(setTablesError);\n    return () => abortController.abort();\n  }, [reservation_id]);\n\n  const handleChange = ({ target }) => {\n    setFormData({ ...formData, [target.name]: target.value });\n  };\n\n  const submitHandle = async (event) => {\n    event.preventDefault();\n    setTablesError(false);\n    const tableId = Number(formData.table_id);\n    const reservationId = Number(reservation_id);\n    const abortController = new AbortController();\n    try {\n      await seatTable(tableId, reservationId, abortController.signal);\n      history.push(`/dashboard`);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        setTablesError(error);\n      }\n    }\n    return () => {\n      abortController.abort();\n    };\n  };\n\n  return (\n    <div>\n      <h3>Seat Reservaion Number {reservation_id}</h3>\n      <ErrorAlert error={tablesError} />\n      <form onSubmit={submitHandle}>\n        <label htmlFor=\"table_id\">\n          {\" \"}\n          Choose a table:\n          <br />\n          <select\n            id=\"table_id\"\n            name=\"table_id\"\n            onChange={handleChange}\n            value={formData.table_id}\n          >\n            <option value=\"\">-- Select an Option --</option>\n            {tables.map((table) => (\n              <option key={table.table_id} value={table.table_id}>\n                {table.table_name} - {table.capacity}\n              </option>\n            ))}\n          </select>\n        </label>\n        <br />\n        <button type=\"submit\" className=\"btn btn-primary m-3\">\n          Submit\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => history.goBack()}\n          className=\"btn btn-secondary m-3\"\n        >\n          Cancel\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default SeatReservation;\n","import React, { useState } from \"react\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport { listReservations } from \"../utils/api\";\nimport ShowReservations from \"./ShowReservations\";\n\nfunction SearchReservations() {\n  const [formData, setFormData] = useState({ mobile_number: \"\" });\n  const [err, setErr] = useState(false);\n  const [reservations, setReservations] = useState([]);\n\n  const changeHandle = ({ target }) => {\n    setFormData({ ...formData, [target.name]: target.value });\n  };\n\n  const submitHandle = async (event) => {\n    event.preventDefault();\n    setErr(false);\n    const abortController = new AbortController();\n    try {\n      const results = await listReservations(formData, abortController.signal);\n      setReservations(results);\n      setFormData({ mobile_number: \"\" });\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        setErr(error);\n      }\n    }\n    return () => {\n      abortController.abort();\n    };\n  };\n\n  return (\n    <main>\n      <h1>Search Reservations</h1>\n      <ErrorAlert error={err} />\n      <section>\n        <form onSubmit={submitHandle}>\n          <div>\n            <label htmlFor=\"mobile_number\" class=\"form-label\">\n              Mobile Number:\n            </label>\n            <br />\n            <input\n              id=\"mobile_number\"\n              class=\"form-control\"\n              type=\"text\"\n              placeholder=\"Enter a customer's phone number\"\n              name=\"mobile_number\"\n              onChange={changeHandle}\n              value={formData.mobile_number}\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary m-3\">\n            Find\n          </button>\n        </form>\n      </section>\n      <hr />\n      {reservations.length > 0 ? (\n        <section>\n          <h3>Search Results</h3>\n          <ShowReservations reservations={reservations} />\n        </section>\n      ) : (\n        \"No reservations found\"\n      )}\n    </main>\n  );\n}\n\nexport default SearchReservations;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport ReservationForm from \"./ReservationForm\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport { readReservation, updateReservation } from \"../utils/api\";\n\nfunction EditReservation() {\n  const { reservation_id } = useParams();\n  const [reservation, setReservation] = useState({});\n\n  const [err, setErr] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    async function getReservation() {\n      const response = await readReservation(reservation_id);\n      setReservation(response);\n    }\n    getReservation();\n  }, [reservation_id]);\n\n  const changeHandle = ({ target }) => {\n    setReservation({ ...reservation, [target.name]: target.value });\n  };\n\n  const submitHandle = async (event) => {\n    event.preventDefault();\n    setErr(false);\n    const abortController = new AbortController();\n    reservation.people = Number(reservation.people);\n    try {\n      const response = await updateReservation(\n        reservation,\n        abortController.signal\n      );\n      history.push(`/dashboard?date=${response.reservation_date}`);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        setErr(error);\n      }\n    }\n    return () => {\n      abortController.abort();\n    };\n  };\n\n  const cancelLink = () => history.goBack();\n\n  return (\n    <div>\n      <h1>Edit Reservation</h1>\n      <ErrorAlert error={err} />\n      <ReservationForm\n        submitHandle={submitHandle}\n        changeHandle={changeHandle}\n        form={reservation}\n        cancelLink={cancelLink}\n      />\n    </div>\n  );\n}\n\nexport default EditReservation;\n","import React from \"react\";\n\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"../dashboard/Dashboard\";\nimport NotFound from \"./NotFound\";\nimport { today } from \"../utils/date-time\";\nimport CreateReservation from \"../reservations/CreateReservation\";\nimport CreateTable from \"../tables/CreateTable\";\nimport SeatReservation from \"../reservations/SeatReservation\";\nimport SearchReservations from \"../reservations/SearchReservations\";\nimport EditReservation from \"../reservations/EditReservation\";\n\n/**\n * Defines all the routes for the application.\n *\n * You will need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact={true} path=\"/\">\n        <Redirect to={\"/dashboard\"} />\n      </Route>\n      <Route exact={true} path=\"/reservations\">\n        <Redirect to={\"/dashboard\"} />\n      </Route>\n      <Route path=\"/dashboard\">\n        <Dashboard date={today()} />\n      </Route>\n      <Route exact={true} path=\"/reservations/new\">\n        <CreateReservation />\n      </Route>\n      <Route exact={true} path=\"/reservations/:reservation_id/seat\">\n        <SeatReservation />\n      </Route>\n      <Route exact={true} path=\"/reservations/:reservation_id/edit\">\n        <EditReservation />\n      </Route>\n      <Route exact={true} path=\"/tables/new\">\n        <CreateTable />\n      </Route>\n      <Route exact={true} path=\"/search\">\n        <SearchReservations />\n      </Route>\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Menu from \"./Menu\";\nimport Routes from \"./Routes\";\n\nimport \"./Layout.css\";\n\n/**\n * Defines the main layout of the application.\n *\n * You will not need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction Layout() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row h-100\">\n        <div className=\"col-md-2 side-bar\">\n          <Menu />\n        </div>\n        <div className=\"col\">\n          <Routes />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./layout/Layout\";\n\n/**\n * Defines the root application component.\n * @returns {JSX.Element}\n */\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\">\n        <Layout />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}